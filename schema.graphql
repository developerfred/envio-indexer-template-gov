type EventsSummary {
  id: ID!
  proposalCanceled: [ProposalCanceled!]! @derivedFrom(field: "eventsSummary")
  proposalCanceledsCount: BigInt!
  proposalCreated: [ProposalCreated!]! @derivedFrom(field: "eventsSummary")
  proposalCreatedsCount: BigInt!
  proposalExecuted: [ProposalExecuted!]! @derivedFrom(field: "eventsSummary")
  proposalExecutedsCount: BigInt!
  proposalQueued: [ProposalQueued!]! @derivedFrom(field: "eventsSummary")
  proposalQueuedsCount: BigInt!
  proposalThresholdSet: [ProposalThresholdSet!]! @derivedFrom(field: "eventsSummary")
  proposalThresholdSetsCount: BigInt!
  timelockChange: [TimelockChange!]! @derivedFrom(field: "eventsSummary")
  timelockChangesCount: BigInt!
  voteCast: [VoteCast!]! @derivedFrom(field: "eventsSummary")
  voteCastsCount: BigInt!
  voteCastWithParams: [VoteCastWithParams!]! @derivedFrom(field: "eventsSummary")
  voteCastWithParamssCount: BigInt!
  votingDelaySet: [VotingDelaySet!]! @derivedFrom(field: "eventsSummary")
  votingDelaySetsCount: BigInt!
  votingPeriodSet: [VotingPeriodSet!]! @derivedFrom(field: "eventsSummary")
  votingPeriodSetsCount: BigInt!
}

type ProposalCanceled {
  id: ID!
  proposalId: BigInt!
  eventsSummary: String!
}
type ProposalCreated {
  id: ID!
  proposalId: BigInt!
  proposer: String!
  targets: [String!]!
  values: [BigInt!]!
  signatures: [String!]!
  calldatas: [String!]!
  startBlock: BigInt!
  endBlock: BigInt!
  description: String!
  eventsSummary: String!
  favorableVotesCount: BigInt!
  totalVotesCount: BigInt! 
  currentState: String! 
}

type ProposalExecuted {
  id: ID!
  proposalId: BigInt!
  eventsSummary: String!
}
type ProposalQueued {
  id: ID!
  proposalId: BigInt!
  eta: BigInt!
  eventsSummary: String!
}
type ProposalThresholdSet {
  id: ID!
  oldProposalThreshold: BigInt!
  newProposalThreshold: BigInt!
  eventsSummary: String!
}
type TimelockChange {
  id: ID!
  oldTimelock: String!
  newTimelock: String!
  eventsSummary: String!
}

type Delegator {
  id: ID!
  delegatorAddress: String!
  delegatedVotesCount: BigInt!
}

type VoteCast {
  id: ID!
  voter: String!
  proposalId: BigInt!
  support: BigInt!
  weight: BigInt!
  reason: String!
  eventsSummary: String!    
}
type VoteCastWithParams {
  id: ID!
  voter: String!
  proposalId: BigInt!
  support: BigInt!
  weight: BigInt!
  reason: String!
  params: String!
  eventsSummary: String!
}
type VotingDelaySet {
  id: ID!
  oldVotingDelay: BigInt!
  newVotingDelay: BigInt!
  eventsSummary: String!
}
type VotingPeriodSet {
  id: ID!
  oldVotingPeriod: BigInt!
  newVotingPeriod: BigInt!
  eventsSummary: String!
}
